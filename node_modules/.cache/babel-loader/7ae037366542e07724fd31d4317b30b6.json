{"ast":null,"code":"var _jsxFileName = \"/home/mfon/Documents/React/colab/eyecare/Colab/src/components/Countdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Notification from \"./Notification\";\nimport styled from \"styled-components\";\nimport Snooze from './Snooze';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyTimer(_ref) {\n  _s();\n\n  let {\n    expiryTimestamp,\n    setCount,\n    count\n  } = _ref;\n  //code for the timer\n  const {\n    seconds,\n    minutes,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => bongo()\n  }); //calls notification everytime the timer runs out\n\n  function bongo() {\n    var intID = setTimeout(notify, 1000); //calls toast notifications when it is done\n\n    function notify() {\n      toast(() => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Notification, {\n          setCount: setCount,\n          count: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this));\n    }\n  } //code to put timer selected\n\n\n  function purr(number) {\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + number);\n    restart(time);\n  }\n\n  function kulp(numb, number) {\n    setInterval(() => purr(number), numb);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"100px\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: minutes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: seconds\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"push\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"20\",\n          className: \"jiggle\",\n          onClick: () => {\n            purr(10);\n            kulp(1100 * 10, 10);\n          },\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"jiggle\",\n          onClick: () => {\n            purr(1500);\n            kulp(1600 * 1000, 1500);\n          },\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"jiggle\",\n          onClick: () => {\n            purr(1800);\n            kulp(1900 * 1000, 1800);\n          },\n          children: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"jiggle\",\n          onClick: () => {\n            purr(2700);\n            kulp(2800 * 1000, 2700);\n          },\n          children: \"45\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n          limit: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyTimer, \"gmCSaEbdc6rTTKORkIp8vGLkIME=\", false, function () {\n  return [useTimer];\n});\n\n_c = MyTimer;\nexport default MyTimer;\nconst Section = styled.section`\n\n\n  .push {\n     background-color: #ffffff;\n      width: 70%;\n      margin: auto;\n      text-align: center;\n\n      border-radius: 7%;\n      height: auto;\n      box-shadow: 0 10px 10px -10px rgba(0,0,0,0.3);\n\n      display: flex;\n      justify-content: space-between;\n      margin: auto;\n\n      padding: 1.5rem;\n\n  }\n \n  .jiggle {\n      background-color: #f3d189;\n      color: #343f56;\n      margin: 2%;\n  }\n\n  button:focus {\n    background-color: #fb9300;\n  }\n\n  button {\n    padding: 15px;\n    background-color: #facf7e;\n    color: #343f56;\n    border: none;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    font-size: 1.2rem;\n    transition: all 1s;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #fb9300;\n      transform: scaleX(1.1);\n      overflow-y: hidden;\n    }\n  }\n\n\n   \n    .column {\n      float: left;\n    }\n\n    .left {\n      width: 75%;\n    }\n\n    .right {\n      width: 25%;\n    }\n \n\n  .Toastify__close-button--light {\n    display: none;\n  }\n\n    --toastify-color-progress-light: linear-gradient(\n    to right,\n     #ffbc5a, #f3d189, #ffe7c4\n  );\n\n  .noti{\n    background-color: #ffffff;\n    border-radius: 0%;\n\n    font-size: 1rem;\n    font-weight: 500;\n\n    padding: 0.5rem;\n    margin: 0;\n\n    border: 0;\n  }\n\n  .vl {\n  \n    border-left: 1px solid #e6e6e6; \n    height: 3rem;\n    // width: 1%;\n    // display: inline-block;\n    // padding: 0;\n    // margin: 0;\n\n\n  }\n`;\n_c2 = Section;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTimer\");\n$RefreshReg$(_c2, \"Section\");","map":{"version":3,"sources":["/home/mfon/Documents/React/colab/eyecare/Colab/src/components/Countdown.jsx"],"names":["React","useTimer","ToastContainer","toast","Notification","styled","Snooze","MyTimer","expiryTimestamp","setCount","count","seconds","minutes","isRunning","start","pause","resume","restart","onExpire","bongo","intID","setTimeout","notify","purr","number","time","Date","setSeconds","getSeconds","kulp","numb","setInterval","fontSize","textAlign","Section","section"],"mappings":"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;AAAA;AAAA;AAAA;AAAA,UAFF;AAmED;;GAtGQtB,O;UAKLN,Q;;;KALKM,O;AAwGT,eAAeA,OAAf;AAEA,MAAM2B,OAAO,GAAG7B,MAAM,CAAC8B,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlGA;MAAMD,O","sourcesContent":["import React from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Notification from \"./Notification\";\nimport styled from \"styled-components\";\nimport Snooze from './Snooze';\n\n\nfunction MyTimer({ expiryTimestamp, setCount, count }) {\n\n\n  //code for the timer\n  const { seconds, minutes, isRunning, start, pause, resume, restart } =\n    useTimer({ expiryTimestamp, onExpire: () => bongo() });\n\n    //calls notification everytime the timer runs out\n  function bongo() {\n    var intID = setTimeout(notify, 1000);\n\n    \n\n    //calls toast notifications when it is done\n    function notify() {\n      toast(() => (\n        <div>\n          <Notification setCount={setCount} count={count}/>\n        </div>\n      ));\n    }\n  }\n\n  //code to put timer selected\n  function purr(number) {\n    const time = new Date();\n\n    time.setSeconds(time.getSeconds() + number);\n    restart(time);\n  }\n\n  function kulp(numb, number) {\n    setInterval(() => purr(number), numb);\n  }\n\n  return (\n    \n    <Section>\n      <div className=\"\">\n        \n        \n      <div className=\"\">\n\n        {/* code for the timer */}\n        <div style={{ fontSize: \"100px\", textAlign: \"center\" }}>\n          <span>{minutes}</span>:<span>{seconds}</span>\n        </div>\n        {/* <p>{isRunning ? \"Running\" : \"Not running\"}</p>\n        <button onClick={start}>Start</button> */}\n        {/* <button onClick={pause}>Pause</button> */}\n        {/* <button onClick={resume}>Resume</button> */}\n      </div>\n\n\n        {/* code for  the  */}\n        <div className=\"push\">\n          <button\n        value=\"20\"\n        className=\"jiggle\"\n        onClick={() => {\n          purr(10);\n          kulp(1100 * 10, 10);\n        }}\n      >\n        20\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(1500);\n          kulp(1600 * 1000, 1500);\n        }}\n      >\n        25\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(1800);\n          kulp(1900 * 1000, 1800);\n        }}\n      >\n        30\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(2700);\n          kulp(2800 * 1000, 2700);\n        }}\n      >\n        45\n      </button>\n\n      <ToastContainer limit={1} />\n        </div>\n      </div>\n    </Section>\n  );\n}\n\nexport default MyTimer;\n\nconst Section = styled.section`\n\n\n  .push {\n     background-color: #ffffff;\n      width: 70%;\n      margin: auto;\n      text-align: center;\n\n      border-radius: 7%;\n      height: auto;\n      box-shadow: 0 10px 10px -10px rgba(0,0,0,0.3);\n\n      display: flex;\n      justify-content: space-between;\n      margin: auto;\n\n      padding: 1.5rem;\n\n  }\n \n  .jiggle {\n      background-color: #f3d189;\n      color: #343f56;\n      margin: 2%;\n  }\n\n  button:focus {\n    background-color: #fb9300;\n  }\n\n  button {\n    padding: 15px;\n    background-color: #facf7e;\n    color: #343f56;\n    border: none;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    font-size: 1.2rem;\n    transition: all 1s;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #fb9300;\n      transform: scaleX(1.1);\n      overflow-y: hidden;\n    }\n  }\n\n\n   \n    .column {\n      float: left;\n    }\n\n    .left {\n      width: 75%;\n    }\n\n    .right {\n      width: 25%;\n    }\n \n\n  .Toastify__close-button--light {\n    display: none;\n  }\n\n    --toastify-color-progress-light: linear-gradient(\n    to right,\n     #ffbc5a, #f3d189, #ffe7c4\n  );\n\n  .noti{\n    background-color: #ffffff;\n    border-radius: 0%;\n\n    font-size: 1rem;\n    font-weight: 500;\n\n    padding: 0.5rem;\n    margin: 0;\n\n    border: 0;\n  }\n\n  .vl {\n  \n    border-left: 1px solid #e6e6e6; \n    height: 3rem;\n    // width: 1%;\n    // display: inline-block;\n    // padding: 0;\n    // margin: 0;\n\n\n  }\n`;\n\n"]},"metadata":{},"sourceType":"module"}