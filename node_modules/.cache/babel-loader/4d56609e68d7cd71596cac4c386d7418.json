{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useToggle = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_use_when_mounted_1 = require(\"react-use-when-mounted\");\n\nvar useToggle = function (initialValue) {\n  if (initialValue === void 0) {\n    initialValue = false;\n  }\n\n  var whenMounted = react_use_when_mounted_1.useWhenMounted();\n\n  var _a = react_1.useState(initialValue),\n      value = _a[0],\n      setValue = _a[1];\n\n  var open = react_1.useCallback(function () {\n    return whenMounted(function () {\n      return setValue(true);\n    });\n  }, [setValue, whenMounted]);\n  var close = react_1.useCallback(function () {\n    return whenMounted(function () {\n      return setValue(false);\n    });\n  }, [setValue, whenMounted]);\n  var toggle = react_1.useCallback(function () {\n    return whenMounted(function () {\n      return setValue(function (p) {\n        return !p;\n      });\n    });\n  }, [setValue, whenMounted]);\n  return {\n    value: value,\n    toggle: toggle,\n    open: open,\n    close: close,\n    on: open,\n    off: close\n  };\n};\n\nexports.useToggle = useToggle;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAWO,IAAMA,SAAS,GAAG,UAACC,YAAD,EAAqB;AAApB;AAAAA;AAAoB;;AAC5C,MAAMC,WAAW,GAAGC,yCAApB;;AACM,WAAoBC,iBAASH,YAAT,CAApB;AAAA,MAACI,KAAK,QAAN;AAAA,MAAQC,QAAQ,QAAhB;;AACN,MAAMC,IAAI,GAAGH,oBAAY;AAAM,sBAAW,CAAC;AAAM,qBAAQ,CAAC,IAAD,CAAR;AAAc,KAArB,CAAX;AAAiC,GAAnD,EAAqD,CAACE,QAAD,EAAWJ,WAAX,CAArD,CAAb;AACA,MAAMM,KAAK,GAAGJ,oBAAY;AAAM,sBAAW,CAAC;AAAM,qBAAQ,CAAC,KAAD,CAAR;AAAe,KAAtB,CAAX;AAAkC,GAApD,EAAsD,CAACE,QAAD,EAAWJ,WAAX,CAAtD,CAAd;AACA,MAAMO,MAAM,GAAGL,oBAAY;AAAM,sBAAW,CAAC;AAAM,qBAAQ,CAAC,UAACM,CAAD,EAAE;AAAK,gBAACA,CAAD;AAAE,OAAV,CAAR;AAAmB,KAA1B,CAAX;AAAsC,GAAxD,EAAyD,CAACJ,QAAD,EAAWJ,WAAX,CAAzD,CAAf;AAEA,SAAO;AACLG,SAAK,OADA;AAELI,UAAM,QAFD;AAGLF,QAAI,MAHC;AAILC,SAAK,OAJA;AAKLG,MAAE,EAAEJ,IALC;AAMLK,OAAG,EAAEJ;AANA,GAAP;AAQD,CAfM;;AAAMK,oBAASb,SAAT","names":["useToggle","initialValue","whenMounted","react_use_when_mounted_1","react_1","value","setValue","open","close","toggle","p","on","off","exports"],"sources":["/home/mfon/Documents/React/colab/eyecare/Colab/node_modules/react-use-toggle-hook/src/index.tsx"],"sourcesContent":["import { useCallback, useState } from 'react'\nimport { useWhenMounted } from 'react-use-when-mounted'\n\ninterface UseToggleResponse {\n  value: boolean\n  toggle: () => void\n  on: () => void\n  off: () => void\n  open: () => void\n  close: () => void\n}\n\nexport const useToggle = (initialValue = false): UseToggleResponse => {\n  const whenMounted = useWhenMounted()\n  const [value, setValue] = useState(initialValue)\n  const open = useCallback(() => whenMounted(() => setValue(true)), [setValue, whenMounted])\n  const close = useCallback(() => whenMounted(() => setValue(false)), [setValue, whenMounted])\n  const toggle = useCallback(() => whenMounted(() => setValue((p) => !p)), [setValue, whenMounted])\n\n  return {\n    value,\n    toggle,\n    open,\n    close,\n    on: open,\n    off: close,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}