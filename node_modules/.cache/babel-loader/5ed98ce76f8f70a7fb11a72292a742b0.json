{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/mfon/Documents/React/colab/eyecare/Colab/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from\"react\";import{useTimer}from\"react-timer-hook\";import{useEffect}from\"react\";import{BsCheckCircleFill}from\"react-icons/bs\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import Notification from\"./Notification\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MyTimer(_ref){var expiryTimestamp=_ref.expiryTimestamp;var _useTimer=useTimer({expiryTimestamp:expiryTimestamp,onExpire:function onExpire(){return bongo();}}),seconds=_useTimer.seconds,minutes=_useTimer.minutes,isRunning=_useTimer.isRunning,start=_useTimer.start,pause=_useTimer.pause,resume=_useTimer.resume,restart=_useTimer.restart;function bongo(){var intID=setTimeout(notify,1000);function notify(){toast(function(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Notification,{})});});}}function purr(number){var time=new Date();time.setSeconds(time.getSeconds()+number);restart(time);}function kulp(numb,number){setInterval(function(){return purr(number);},numb);}return/*#__PURE__*/_jsxs(Section,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"100px\",textAlign:\"center\"}})}),/*#__PURE__*/_jsx(\"button\",{value:\"20\",className:\"jiggle\",onClick:function onClick(){purr(10);kulp(1100*10,10);},children:\"20\"}),/*#__PURE__*/_jsx(\"button\",{className:\"jiggle\",onClick:function onClick(){purr(1500);kulp(1600*1000,1500);},children:\"25\"}),/*#__PURE__*/_jsx(\"button\",{className:\"jiggle\",onClick:function onClick(){purr(1800);kulp(1900*1000,1800);},children:\"30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"jiggle\",onClick:function onClick(){purr(2700);kulp(2800*1000,2700);},children:\"45\"}),/*#__PURE__*/_jsx(ToastContainer,{limit:1})]});}export default MyTimer;var Section=styled.section(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\n  background-color: #ffffff;\\n  width: 70%;\\n  margin: auto;\\n  text-align: center;\\n\\n  border-radius: 7%;\\n  height: auto;\\n  box-shadow: 0 10px 10px -10px rgba(0,0,0,0.3);\\n\\n  display: flex;\\n  justify-content: space-between;\\n  margin: auto;\\n\\n  padding: 1.5rem;\\n\\n  .jiggle {\\n      background-color: #f3d189;\\n      color: #343f56;\\n      margin: 2%;\\n      box-shadow: 0 12px 10px -10px rgba(0,0,0,0.3);\\n  }\\n\\n  button:focus {\\n    background-color: #fb9300;\\n  }\\n\\n  button {\\n    padding: 15px;\\n    background-color: #facf7e;\\n    color: #343f56;\\n    border: none;\\n    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\\n    border-radius: 50%;\\n    font-size: 1.2rem;\\n    font-weight: bold;\\n    transition: all 1s;\\n    cursor: pointer;\\n\\n    &:hover {\\n      background-color: #fb9300;\\n      transform: scaleX(1.1);\\n      overflow-y: hidden;\\n    }\\n  }\\n\\n\\n   \\n    .column {\\n      float: left;\\n    }\\n\\n    .left {\\n      width: 75%;\\n    }\\n\\n    .right {\\n      width: 25%;\\n    }\\n \\n\\n  .Toastify__close-button--light {\\n    display: none;\\n  }\\n\\n    --toastify-color-progress-light: linear-gradient(\\n    to right,\\n     #ffbc5a, #f3d189, #ffe7c4\\n  );\\n\\n  .noti{\\n    background-color: #ffffff;\\n    border-radius: 0%;\\n\\n    font-size: 1rem;\\n    font-weight: 500;\\n\\n    padding: 0.5rem;\\n    margin: 0;\\n\\n    border: 0;\\n  }\\n\\n  .vl {\\n  \\n    border-left: 1px solid #e6e6e6; \\n    height: 3rem;\\n    // width: 1%;\\n    // display: inline-block;\\n    // padding: 0;\\n    // margin: 0;\\n\\n\\n  }\\n\"])));","map":{"version":3,"sources":["/home/mfon/Documents/React/colab/eyecare/Colab/src/components/Countdown.jsx"],"names":["React","useTimer","useEffect","BsCheckCircleFill","ToastContainer","toast","Notification","styled","MyTimer","expiryTimestamp","onExpire","bongo","seconds","minutes","isRunning","start","pause","resume","restart","intID","setTimeout","notify","purr","number","time","Date","setSeconds","getSeconds","kulp","numb","setInterval","fontSize","textAlign","Section","section"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAO,uCAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,QAASC,CAAAA,OAAT,MAAsC,IAAnBC,CAAAA,eAAmB,MAAnBA,eAAmB,CACpC,cACER,QAAQ,CAAC,CAAEQ,eAAe,CAAfA,eAAF,CAAmBC,QAAQ,CAAE,0BAAMC,CAAAA,KAAK,EAAX,EAA7B,CAAD,CADV,CAAQC,OAAR,WAAQA,OAAR,CAAiBC,OAAjB,WAAiBA,OAAjB,CAA0BC,SAA1B,WAA0BA,SAA1B,CAAqCC,KAArC,WAAqCA,KAArC,CAA4CC,KAA5C,WAA4CA,KAA5C,CAAmDC,MAAnD,WAAmDA,MAAnD,CAA2DC,OAA3D,WAA2DA,OAA3D,CAGA,QAASP,CAAAA,KAAT,EAAiB,CACf,GAAIQ,CAAAA,KAAK,CAAGC,UAAU,CAACC,MAAD,CAAS,IAAT,CAAtB,CAEA,QAASA,CAAAA,MAAT,EAAkB,CAChBhB,KAAK,CAAC,8BACJ,kCACE,KAAC,YAAD,IADF,EADI,EAAD,CAAL,CAKD,CACF,CAED,QAASiB,CAAAA,IAAT,CAAcC,MAAd,CAAsB,CACpB,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CAEAD,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,GAAoBJ,MAApC,EACAL,OAAO,CAACM,IAAD,CAAP,CACD,CAED,QAASI,CAAAA,IAAT,CAAcC,IAAd,CAAoBN,MAApB,CAA4B,CAC1BO,WAAW,CAAC,iBAAMR,CAAAA,IAAI,CAACC,MAAD,CAAV,EAAD,CAAqBM,IAArB,CAAX,CACD,CAED,mBACE,MAAC,OAAD,yBACE,kCACE,YAAK,KAAK,CAAE,CAAEE,QAAQ,CAAE,OAAZ,CAAqBC,SAAS,CAAE,QAAhC,CAAZ,EADF,EADF,cAWE,eACE,KAAK,CAAC,IADR,CAEE,SAAS,CAAC,QAFZ,CAGE,OAAO,CAAE,kBAAM,CACbV,IAAI,CAAC,EAAD,CAAJ,CACAM,IAAI,CAAC,KAAO,EAAR,CAAY,EAAZ,CAAJ,CACD,CANH,gBAXF,cAsBE,eACE,SAAS,CAAC,QADZ,CAEE,OAAO,CAAE,kBAAM,CACbN,IAAI,CAAC,IAAD,CAAJ,CACAM,IAAI,CAAC,KAAO,IAAR,CAAc,IAAd,CAAJ,CACD,CALH,gBAtBF,cAgCE,eACE,SAAS,CAAC,QADZ,CAEE,OAAO,CAAE,kBAAM,CACbN,IAAI,CAAC,IAAD,CAAJ,CACAM,IAAI,CAAC,KAAO,IAAR,CAAc,IAAd,CAAJ,CACD,CALH,gBAhCF,cA0CE,eACE,SAAS,CAAC,QADZ,CAEE,OAAO,CAAE,kBAAM,CACbN,IAAI,CAAC,IAAD,CAAJ,CACAM,IAAI,CAAC,KAAO,IAAR,CAAc,IAAd,CAAJ,CACD,CALH,gBA1CF,cAoDE,KAAC,cAAD,EAAgB,KAAK,CAAE,CAAvB,EApDF,GADF,CAwDD,CAED,cAAepB,CAAAA,OAAf,CAEA,GAAMyB,CAAAA,OAAO,CAAG1B,MAAM,CAAC2B,OAAV,gkDAAb","sourcesContent":["import React from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { useEffect } from \"react\";\nimport { BsCheckCircleFill } from \"react-icons/bs\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Notification from \"./Notification\";\nimport styled from \"styled-components\";\n\nfunction MyTimer({ expiryTimestamp }) {\n  const { seconds, minutes, isRunning, start, pause, resume, restart } =\n    useTimer({ expiryTimestamp, onExpire: () => bongo() });\n\n  function bongo() {\n    var intID = setTimeout(notify, 1000);\n\n    function notify() {\n      toast(() => (\n        <div>\n          <Notification />\n        </div>\n      ));\n    }\n  }\n\n  function purr(number) {\n    const time = new Date();\n\n    time.setSeconds(time.getSeconds() + number);\n    restart(time);\n  }\n\n  function kulp(numb, number) {\n    setInterval(() => purr(number), numb);\n  }\n\n  return (\n    <Section>\n      <div>\n        <div style={{ fontSize: \"100px\", textAlign: \"center\" }}>\n          {/* <span>{minutes}</span>:<span>{seconds}</span> */}\n        </div>\n        {/* <p>{isRunning ? \"Running\" : \"Not running\"}</p> */}\n        {/* <button onClick={start}>Start</button>\n        <button onClick={pause}>Pause</button>\n        <button onClick={resume}>Resume</button> */}\n      </div>\n\n      <button\n        value=\"20\"\n        className=\"jiggle\"\n        onClick={() => {\n          purr(10);\n          kulp(1100 * 10, 10);\n        }}\n      >\n        20\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(1500);\n          kulp(1600 * 1000, 1500);\n        }}\n      >\n        25\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(1800);\n          kulp(1900 * 1000, 1800);\n        }}\n      >\n        30\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(2700);\n          kulp(2800 * 1000, 2700);\n        }}\n      >\n        45\n      </button>\n\n      <ToastContainer limit={1} />\n    </Section>\n  );\n}\n\nexport default MyTimer;\n\nconst Section = styled.section`\n\n  background-color: #ffffff;\n  width: 70%;\n  margin: auto;\n  text-align: center;\n\n  border-radius: 7%;\n  height: auto;\n  box-shadow: 0 10px 10px -10px rgba(0,0,0,0.3);\n\n  display: flex;\n  justify-content: space-between;\n  margin: auto;\n\n  padding: 1.5rem;\n\n  .jiggle {\n      background-color: #f3d189;\n      color: #343f56;\n      margin: 2%;\n      box-shadow: 0 12px 10px -10px rgba(0,0,0,0.3);\n  }\n\n  button:focus {\n    background-color: #fb9300;\n  }\n\n  button {\n    padding: 15px;\n    background-color: #facf7e;\n    color: #343f56;\n    border: none;\n    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n    border-radius: 50%;\n    font-size: 1.2rem;\n    font-weight: bold;\n    transition: all 1s;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #fb9300;\n      transform: scaleX(1.1);\n      overflow-y: hidden;\n    }\n  }\n\n\n   \n    .column {\n      float: left;\n    }\n\n    .left {\n      width: 75%;\n    }\n\n    .right {\n      width: 25%;\n    }\n \n\n  .Toastify__close-button--light {\n    display: none;\n  }\n\n    --toastify-color-progress-light: linear-gradient(\n    to right,\n     #ffbc5a, #f3d189, #ffe7c4\n  );\n\n  .noti{\n    background-color: #ffffff;\n    border-radius: 0%;\n\n    font-size: 1rem;\n    font-weight: 500;\n\n    padding: 0.5rem;\n    margin: 0;\n\n    border: 0;\n  }\n\n  .vl {\n  \n    border-left: 1px solid #e6e6e6; \n    height: 3rem;\n    // width: 1%;\n    // display: inline-block;\n    // padding: 0;\n    // margin: 0;\n\n\n  }\n`;\n\n"]},"metadata":{},"sourceType":"module"}