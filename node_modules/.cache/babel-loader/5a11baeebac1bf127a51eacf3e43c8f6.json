{"ast":null,"code":"var _jsxFileName = \"/home/mfon/Documents/React/colab/eyecare/Colab/src/components/Countdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { useEffect } from \"react\";\nimport { BsCheckCircleFill } from \"react-icons/bs\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Notification from \"./Notification\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyTimer(_ref) {\n  _s();\n\n  let {\n    expiryTimestamp\n  } = _ref;\n  const {\n    seconds,\n    minutes,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => bongo()\n  });\n\n  function bongo() {\n    var intID = setTimeout(notify, 1000);\n\n    function notify() {\n      toast(() => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  function purr(number) {\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + number);\n    restart(time);\n  }\n\n  function kulp(numb, number) {\n    setInterval(() => purr(number), numb);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"100px\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"20\",\n      className: \"jiggle\",\n      onClick: () => {\n        purr(10);\n        kulp(1100 * 10, 10);\n      },\n      children: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"jiggle\",\n      onClick: () => {\n        purr(1500);\n        kulp(1600 * 1000, 1500);\n      },\n      children: \"25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"jiggle\",\n      onClick: () => {\n        purr(1800);\n        kulp(1900 * 1000, 1800);\n      },\n      children: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"jiggle\",\n      onClick: () => {\n        purr(2700);\n        kulp(2800 * 1000, 2700);\n      },\n      children: \"45\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      limit: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyTimer, \"gmCSaEbdc6rTTKORkIp8vGLkIME=\", false, function () {\n  return [useTimer];\n});\n\n_c = MyTimer;\nexport default MyTimer;\nconst Section = styled.section`\n\n  background-color: #ffffff;\n  width: 70%;\n  margin: auto;\n  text-align: center;\n\n  border-radius: 7%;\n  height: auto;\n  box-shadow: 0 10px 10px -10px rgba(0,0,0,0.3);\n\n  display: flex;\n  justify-content: space-between;\n  margin: auto;\n\n  padding: 1.5rem;\n\n  .jiggle {\n      background-color: #f3d189;\n      color: #343f56;\n      margin: 2%;\n      box-shadow: 0 12px 10px -10px rgba(0,0,0,0.3);\n  }\n\n  button:focus {\n    background-color: #fb9300;\n  }\n\n  button {\n    padding: 15px;\n    background-color: #facf7e;\n    color: #343f56;\n    border: none;\n    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n    border-radius: 50%;\n    font-size: 1.2rem;\n    font-weight: bold;\n    transition: all 1s;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #fb9300;\n      transform: scaleX(1.1);\n      overflow-y: hidden;\n    }\n  }\n\n\n    .row {\n    display: flex;\n\n  }\n\n    .column {\n      flex: 80%;\n    }\n\n \n\n  .Toastify__close-button--light {\n    display: none;\n  }\n\n  .noti{\n    background-color: #ffffff;\n    border-radius: 0%;\n\n    font-size: 1rem;\n    font-weight: 500;\n\n    padding: 0.2rem;\n    margin: 0;\n  }\n`;\n_c2 = Section;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTimer\");\n$RefreshReg$(_c2, \"Section\");","map":{"version":3,"sources":["/home/mfon/Documents/React/colab/eyecare/Colab/src/components/Countdown.jsx"],"names":["React","useTimer","useEffect","BsCheckCircleFill","ToastContainer","toast","Notification","styled","MyTimer","expiryTimestamp","seconds","minutes","isRunning","start","pause","resume","restart","onExpire","bongo","intID","setTimeout","notify","purr","number","time","Date","setSeconds","getSeconds","kulp","numb","setInterval","fontSize","textAlign","Section","section"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { useEffect } from \"react\";\nimport { BsCheckCircleFill } from \"react-icons/bs\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Notification from \"./Notification\";\nimport styled from \"styled-components\";\n\nfunction MyTimer({ expiryTimestamp }) {\n  const { seconds, minutes, isRunning, start, pause, resume, restart } =\n    useTimer({ expiryTimestamp, onExpire: () => bongo() });\n\n  function bongo() {\n    var intID = setTimeout(notify, 1000);\n\n    function notify() {\n      toast(() => (\n        <div>\n          <Notification />\n        </div>\n      ));\n    }\n  }\n\n  function purr(number) {\n    const time = new Date();\n\n    time.setSeconds(time.getSeconds() + number);\n    restart(time);\n  }\n\n  function kulp(numb, number) {\n    setInterval(() => purr(number), numb);\n  }\n\n  return (\n    <Section>\n      <div>\n        <div style={{ fontSize: \"100px\", textAlign: \"center\" }}>\n          <span>{minutes}</span>:<span>{seconds}</span>\n        </div>\n        {/* <p>{isRunning ? \"Running\" : \"Not running\"}</p>\n        <button onClick={start}>Start</button>\n        <button onClick={pause}>Pause</button>\n        <button onClick={resume}>Resume</button> */}\n      </div>\n\n      <button\n        value=\"20\"\n        className=\"jiggle\"\n        onClick={() => {\n          purr(10);\n          kulp(1100 * 10, 10);\n        }}\n      >\n        20\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(1500);\n          kulp(1600 * 1000, 1500);\n        }}\n      >\n        25\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(1800);\n          kulp(1900 * 1000, 1800);\n        }}\n      >\n        30\n      </button>\n\n      <button\n        className=\"jiggle\"\n        onClick={() => {\n          purr(2700);\n          kulp(2800 * 1000, 2700);\n        }}\n      >\n        45\n      </button>\n\n      <ToastContainer limit={1} />\n    </Section>\n  );\n}\n\nexport default MyTimer;\n\nconst Section = styled.section`\n\n  background-color: #ffffff;\n  width: 70%;\n  margin: auto;\n  text-align: center;\n\n  border-radius: 7%;\n  height: auto;\n  box-shadow: 0 10px 10px -10px rgba(0,0,0,0.3);\n\n  display: flex;\n  justify-content: space-between;\n  margin: auto;\n\n  padding: 1.5rem;\n\n  .jiggle {\n      background-color: #f3d189;\n      color: #343f56;\n      margin: 2%;\n      box-shadow: 0 12px 10px -10px rgba(0,0,0,0.3);\n  }\n\n  button:focus {\n    background-color: #fb9300;\n  }\n\n  button {\n    padding: 15px;\n    background-color: #facf7e;\n    color: #343f56;\n    border: none;\n    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n    border-radius: 50%;\n    font-size: 1.2rem;\n    font-weight: bold;\n    transition: all 1s;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #fb9300;\n      transform: scaleX(1.1);\n      overflow-y: hidden;\n    }\n  }\n\n\n    .row {\n    display: flex;\n\n  }\n\n    .column {\n      flex: 80%;\n    }\n\n \n\n  .Toastify__close-button--light {\n    display: none;\n  }\n\n  .noti{\n    background-color: #ffffff;\n    border-radius: 0%;\n\n    font-size: 1rem;\n    font-weight: 500;\n\n    padding: 0.2rem;\n    margin: 0;\n  }\n`;\n\n"]},"metadata":{},"sourceType":"module"}